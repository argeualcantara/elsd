// Code generated by protoc-gen-go. DO NOT EDIT.
// source: els.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	els.proto

It has these top-level messages:
	RoutingKeyRequest
	ServiceInstanceResponse
	ServiceInstanceListResponse
	AddRoutingKeyRequest
	DeleteRoutingKeyRequest
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoutingKeyRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RoutingKeyRequest) Reset()                    { *m = RoutingKeyRequest{} }
func (m *RoutingKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*RoutingKeyRequest) ProtoMessage()               {}
func (*RoutingKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RoutingKeyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ServiceInstanceResponse struct {
	ServiceUri string `protobuf:"bytes,1,opt,name=serviceUri" json:"serviceUri,omitempty"`
	Tags       string `protobuf:"bytes,2,opt,name=tags" json:"tags,omitempty"`
}

func (m *ServiceInstanceResponse) Reset()                    { *m = ServiceInstanceResponse{} }
func (m *ServiceInstanceResponse) String() string            { return proto.CompactTextString(m) }
func (*ServiceInstanceResponse) ProtoMessage()               {}
func (*ServiceInstanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ServiceInstanceResponse) GetServiceUri() string {
	if m != nil {
		return m.ServiceUri
	}
	return ""
}

func (m *ServiceInstanceResponse) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

type ServiceInstanceListResponse struct {
	ServiceInstances []*ServiceInstanceResponse `protobuf:"bytes,1,rep,name=serviceInstances" json:"serviceInstances,omitempty"`
}

func (m *ServiceInstanceListResponse) Reset()                    { *m = ServiceInstanceListResponse{} }
func (m *ServiceInstanceListResponse) String() string            { return proto.CompactTextString(m) }
func (*ServiceInstanceListResponse) ProtoMessage()               {}
func (*ServiceInstanceListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ServiceInstanceListResponse) GetServiceInstances() []*ServiceInstanceResponse {
	if m != nil {
		return m.ServiceInstances
	}
	return nil
}

type AddRoutingKeyRequest struct {
	ServiceUri string `protobuf:"bytes,1,opt,name=serviceUri" json:"serviceUri,omitempty"`
	Tags       string `protobuf:"bytes,2,opt,name=tags" json:"tags,omitempty"`
	RoutingKey string `protobuf:"bytes,3,opt,name=routingKey" json:"routingKey,omitempty"`
}

func (m *AddRoutingKeyRequest) Reset()                    { *m = AddRoutingKeyRequest{} }
func (m *AddRoutingKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRoutingKeyRequest) ProtoMessage()               {}
func (*AddRoutingKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AddRoutingKeyRequest) GetServiceUri() string {
	if m != nil {
		return m.ServiceUri
	}
	return ""
}

func (m *AddRoutingKeyRequest) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *AddRoutingKeyRequest) GetRoutingKey() string {
	if m != nil {
		return m.RoutingKey
	}
	return ""
}

type DeleteRoutingKeyRequest struct {
	ServiceUri string `protobuf:"bytes,1,opt,name=serviceUri" json:"serviceUri,omitempty"`
	RoutingKey string `protobuf:"bytes,3,opt,name=routingKey" json:"routingKey,omitempty"`
}

func (m *DeleteRoutingKeyRequest) Reset()                    { *m = DeleteRoutingKeyRequest{} }
func (m *DeleteRoutingKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRoutingKeyRequest) ProtoMessage()               {}
func (*DeleteRoutingKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeleteRoutingKeyRequest) GetServiceUri() string {
	if m != nil {
		return m.ServiceUri
	}
	return ""
}

func (m *DeleteRoutingKeyRequest) GetRoutingKey() string {
	if m != nil {
		return m.RoutingKey
	}
	return ""
}

func init() {
	proto.RegisterType((*RoutingKeyRequest)(nil), "api.RoutingKeyRequest")
	proto.RegisterType((*ServiceInstanceResponse)(nil), "api.ServiceInstanceResponse")
	proto.RegisterType((*ServiceInstanceListResponse)(nil), "api.ServiceInstanceListResponse")
	proto.RegisterType((*AddRoutingKeyRequest)(nil), "api.AddRoutingKeyRequest")
	proto.RegisterType((*DeleteRoutingKeyRequest)(nil), "api.DeleteRoutingKeyRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Els service

type ElsClient interface {
	// Get a service by routingKey
	GetServiceInstanceByKey(ctx context.Context, in *RoutingKeyRequest, opts ...grpc.CallOption) (*ServiceInstanceResponse, error)
	// Get a service by routingKey
	ListServiceInstances(ctx context.Context, in *RoutingKeyRequest, opts ...grpc.CallOption) (*ServiceInstanceListResponse, error)
	// Add a routingKey to a service
	AddRoutingKey(ctx context.Context, in *AddRoutingKeyRequest, opts ...grpc.CallOption) (*ServiceInstanceResponse, error)
	// Add a routingKey to a service
	RemoveRoutingKey(ctx context.Context, in *DeleteRoutingKeyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type elsClient struct {
	cc *grpc.ClientConn
}

func NewElsClient(cc *grpc.ClientConn) ElsClient {
	return &elsClient{cc}
}

func (c *elsClient) GetServiceInstanceByKey(ctx context.Context, in *RoutingKeyRequest, opts ...grpc.CallOption) (*ServiceInstanceResponse, error) {
	out := new(ServiceInstanceResponse)
	err := grpc.Invoke(ctx, "/api.Els/GetServiceInstanceByKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *elsClient) ListServiceInstances(ctx context.Context, in *RoutingKeyRequest, opts ...grpc.CallOption) (*ServiceInstanceListResponse, error) {
	out := new(ServiceInstanceListResponse)
	err := grpc.Invoke(ctx, "/api.Els/ListServiceInstances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *elsClient) AddRoutingKey(ctx context.Context, in *AddRoutingKeyRequest, opts ...grpc.CallOption) (*ServiceInstanceResponse, error) {
	out := new(ServiceInstanceResponse)
	err := grpc.Invoke(ctx, "/api.Els/AddRoutingKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *elsClient) RemoveRoutingKey(ctx context.Context, in *DeleteRoutingKeyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/api.Els/RemoveRoutingKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Els service

type ElsServer interface {
	// Get a service by routingKey
	GetServiceInstanceByKey(context.Context, *RoutingKeyRequest) (*ServiceInstanceResponse, error)
	// Get a service by routingKey
	ListServiceInstances(context.Context, *RoutingKeyRequest) (*ServiceInstanceListResponse, error)
	// Add a routingKey to a service
	AddRoutingKey(context.Context, *AddRoutingKeyRequest) (*ServiceInstanceResponse, error)
	// Add a routingKey to a service
	RemoveRoutingKey(context.Context, *DeleteRoutingKeyRequest) (*google_protobuf.Empty, error)
}

func RegisterElsServer(s *grpc.Server, srv ElsServer) {
	s.RegisterService(&_Els_serviceDesc, srv)
}

func _Els_GetServiceInstanceByKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutingKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElsServer).GetServiceInstanceByKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Els/GetServiceInstanceByKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElsServer).GetServiceInstanceByKey(ctx, req.(*RoutingKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Els_ListServiceInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutingKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElsServer).ListServiceInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Els/ListServiceInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElsServer).ListServiceInstances(ctx, req.(*RoutingKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Els_AddRoutingKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRoutingKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElsServer).AddRoutingKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Els/AddRoutingKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElsServer).AddRoutingKey(ctx, req.(*AddRoutingKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Els_RemoveRoutingKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoutingKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElsServer).RemoveRoutingKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Els/RemoveRoutingKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElsServer).RemoveRoutingKey(ctx, req.(*DeleteRoutingKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Els_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Els",
	HandlerType: (*ElsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServiceInstanceByKey",
			Handler:    _Els_GetServiceInstanceByKey_Handler,
		},
		{
			MethodName: "ListServiceInstances",
			Handler:    _Els_ListServiceInstances_Handler,
		},
		{
			MethodName: "AddRoutingKey",
			Handler:    _Els_AddRoutingKey_Handler,
		},
		{
			MethodName: "RemoveRoutingKey",
			Handler:    _Els_RemoveRoutingKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "els.proto",
}

func init() { proto.RegisterFile("els.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0x85, 0xd6, 0x98, 0x30, 0x46, 0x83, 0x1b, 0x02, 0x15, 0x8c, 0x21, 0xeb, 0x85, 0xd3, 0x92,
	0xe0, 0x2f, 0xd0, 0x48, 0x54, 0xd0, 0x83, 0x6b, 0x3c, 0x78, 0x2c, 0x74, 0x6c, 0xd6, 0x94, 0x6e,
	0xed, 0x2c, 0x24, 0xfd, 0x7f, 0xfe, 0x30, 0xc3, 0x56, 0x91, 0xaf, 0x4a, 0xf4, 0xb6, 0x79, 0xb3,
	0xef, 0xcd, 0xcc, 0x9b, 0x07, 0x15, 0x8c, 0x48, 0x24, 0xa9, 0x36, 0x9a, 0xb9, 0x7e, 0xa2, 0x9a,
	0xad, 0x50, 0xeb, 0x30, 0xc2, 0xae, 0x85, 0x46, 0xd3, 0xd7, 0x2e, 0x4e, 0x12, 0x93, 0xe5, 0x3f,
	0xf8, 0x39, 0x1c, 0x4b, 0x3d, 0x35, 0x2a, 0x0e, 0x87, 0x98, 0x49, 0x7c, 0x9f, 0x22, 0x19, 0x76,
	0x04, 0x8e, 0x0a, 0xbc, 0x72, 0xbb, 0xdc, 0xa9, 0x48, 0x47, 0x05, 0xfc, 0x01, 0x1a, 0x4f, 0x98,
	0xce, 0xd4, 0x18, 0xef, 0x62, 0x32, 0x7e, 0x3c, 0x46, 0x89, 0x94, 0xe8, 0x98, 0x90, 0x9d, 0x01,
	0x50, 0x5e, 0x7a, 0x4e, 0xd5, 0x17, 0x65, 0x09, 0x61, 0x0c, 0xf6, 0x8c, 0x1f, 0x92, 0xe7, 0xd8,
	0x8a, 0x7d, 0xf3, 0x10, 0x5a, 0x6b, 0x72, 0xf7, 0x8a, 0xcc, 0x42, 0xf2, 0x16, 0xaa, 0xb4, 0x5a,
	0x26, 0xaf, 0xdc, 0x76, 0x3b, 0x07, 0xbd, 0x53, 0xe1, 0x27, 0x4a, 0x14, 0x8c, 0x22, 0x37, 0x58,
	0xfc, 0x0d, 0x6a, 0x97, 0x41, 0xb0, 0xb9, 0xdf, 0x3f, 0x86, 0x9e, 0x73, 0xd2, 0x85, 0x90, 0xe7,
	0xe6, 0x9c, 0x1f, 0x84, 0xbf, 0x40, 0xe3, 0x1a, 0x23, 0x34, 0xf8, 0xf7, 0x76, 0x3b, 0xa4, 0x7b,
	0x1f, 0x0e, 0xb8, 0xfd, 0x88, 0xd8, 0x23, 0x34, 0x6e, 0xd0, 0xac, 0xad, 0x7f, 0x95, 0x0d, 0x31,
	0x63, 0x75, 0xeb, 0xcc, 0x46, 0xeb, 0xe6, 0xaf, 0x8e, 0xf1, 0x12, 0x93, 0x50, 0x9b, 0x7b, 0xbf,
	0xf6, 0x81, 0x0a, 0xf5, 0xda, 0xdb, 0xf4, 0x96, 0xaf, 0xc7, 0x4b, 0x6c, 0x00, 0x87, 0x2b, 0xae,
	0xb3, 0x13, 0x4b, 0xda, 0x76, 0x89, 0x9d, 0xf3, 0x0d, 0xa0, 0x2a, 0x71, 0xa2, 0x67, 0x4b, 0xae,
	0xb2, 0x9c, 0x53, 0x60, 0x76, 0xb3, 0x2e, 0xf2, 0xb8, 0x8b, 0xef, 0xb8, 0x8b, 0xfe, 0x3c, 0xee,
	0xbc, 0x34, 0xda, 0xb7, 0xc8, 0xc5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0x53, 0x27, 0x77,
	0x20, 0x03, 0x00, 0x00,
}
